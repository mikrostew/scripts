#!/usr/bin/env bash
# show a busy spinner while the input PID is running

# use this like:
#  $ sleep 10 &
#  $ spinner $!
#  ⠼

# or you can add an optional message for the spinner
#  $ spinner $! "grepping files..."
#  ⠼ grepping files...

@import echo_err from .bash_shared_functions

# use getopts to parse positional arguments
# TODO: eventually generate the boilerplate for this
while getopts ":m:" opt
do
  case $opt in
    m)
      spin_msg="$OPTARG"
      ;;
    \?)
      echo_err "$0: Invalid option '-$OPTARG'"
      exit 1
      ;;
    :)
      echo_err "$0: Option '-$OPTARG' requires an argument"
      exit 1
      ;;
  esac
done

# get rid of any positional params
shift $((OPTIND-1))

# TODO: check this arg as well, echo_err on error
cmd_pid="${1:?Must specify PID for spinner}"

spin_chars='⠋⠙⠹⠸⠼⠴⠦⠧⠇⠏' # braille dots

num_chars=${#spin_chars}
total_length=$(( 2 + ${#spin_msg} ))

i=0
while kill -0 $cmd_pid 2>/dev/null
do
  i=$(( (i + 1) % num_chars ))
  printf "\r${spin_chars:$i:1} ${spin_msg}" >&2
  sleep 0.1
done

# attempt to clean up (doesn't always work)
printf "\r%-${total_length}s\r" ' ' >&2

