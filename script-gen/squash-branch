#!/usr/bin/env bash
# [git] Squash commits in current branch into a single commit

@arg 'commit_msg' 'Commit message'
@arg_optional 'commit_msg_extra_line' 'Extra line for more info, overrides, etc.'

@import { current_git_branch, based_on_master_or_origin, commit_diff_on_branch } from .bash_git
@import echo_info from .bash_shared_functions

@uses-cmds squash-commits

branch_name=$(current_git_branch)
based_on=$(based_on_master_or_origin $branch_name)
# this may not be what I want in all situations - fix this when it becomes a problem
num_commits_on_branch="$(commit_diff_on_branch $branch_name $based_on)"

echo_info "$num_commits_on_branch change(s) between '$branch_name' and '$based_on'"
echo -n "Confirm squashing $num_commits_on_branch commits [Y/n]: "
read confirm
if [ -z "$confirm" ] || [ "$confirm" == "Y" ] || [ "$confirm" == "y" ]
then
  squash-commits "$num_commits_on_branch" "$commit_msg" "$commit_msg_extra_line"
else
  echo_info "Not squashing"
fi

