#!/usr/bin/env bash
# Create links for dotfiles

@import_var { COLOR_FG_YELLOW, COLOR_FG_BOLD_BLUE, COLOR_FG_GREEN, COLOR_RESET } from .bash_colors

@uses_cmds readlink

# optionally input the directory where the repo is checked out
checkoutdir="${1:-$HOME/dotfiles}"

# use bash 4.x associative arrays
declare -A links

# vim
links[".vimrc"]=".vimrc"
links[".vim"]=".vim"

# bash
links[".bash_profile"]=".bash_profile"
links[".bashrc"]=".bashrc"

# inputrc
links[".inputrc"]=".inputrc"

# gitignore
links[".gitignore"]=".gitignore"

# tmux
links[".tmux.conf"]=".tmux.conf"

# bundler
links[".bundle"]=".bundle"

# rubocop
links[".rubocop.yml"]=".rubocop.yml"

# platform-specific
if ?PLATFORM_IS_MAC?
then
  # ssh
  links[".ssh/config"]=".ssh-config-mac"
elif ?PLATFORM_IS_LINUX
then
  # ssh
  links[".ssh/config"]=".ssh-config-linux"
fi

# create the links
for i in "${!links[@]}"
do
  echo -n "$HOME/$i => $checkoutdir/${links[$i]}"
  if [ -L "$HOME/$i" ]
  then
    echo -e " ${COLOR_FG_YELLOW}(symlink already exists, skipping)${COLOR_RESET}"
    continue
  fi
  if [ -e "$HOME/$i" ]
  then
    echo -ne " ${COLOR_FG_BOLD_BLUE}(file exists, renamed to '$HOME/$i-old')${COLOR_RESET}"
    mv "$HOME/$i" "$HOME/$i-old"
  fi
  ln -s "$checkoutdir/${links[$i]}" "$HOME/$i"
  echo -e " [${COLOR_FG_GREEN}OK${COLOR_RESET}]"
done
