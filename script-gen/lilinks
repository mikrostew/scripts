#!/usr/bin/env bash
# Presents a menu to open various URLs and things for linkedin daily stuff

@import { echo_info } from .bash_shared_functions

@uses_cmds open/OSX xdg-open/Linux

# all the possible menu options, mapped to function names
declare -A menu_items
menu_items['Cafe Menus']='cafe_menus'
menu_items['Floor Plans']='floor_plans'
menu_items['Review Boards']='review_boards'
menu_items['Coding Music']='coding_music'

# to account for Linux and Mac
open_url() {
  if ?PLATFORM_IS_MAC?
  then
    open "$1"
  elif ?PLATFORM_IS_LINUX?
  then
    xdg-open "$1"
  fi
}

cafe_menus() {
  # menus opened in reverse order, so the ones closest to me I will see first
  open_url 'https://linkedin.cafebonappetit.com/cafe/cafe-elevate/'
  open_url 'https://linkedin.cafebonappetit.com/cafe/journey/'
  open_url 'https://linkedin.cafebonappetit.com/cafe/mezzo/'
  open_url 'https://linkedin.cafebonappetit.com/cafe/nosh/'
}

floor_plans() {
  echo "floor_plans: TODO"
  # TODO: this should prompt for the building, and then link to the floor plan
  # (or, if I have these downloaded locally, open those instead, which should be faster)
}

review_boards() {
  # open review board dashboards for everybody on the team
  open_url 'https://rb.corp.linkedin.com/users/aravisha/'
  open_url 'https://rb.corp.linkedin.com/users/bblank/'
  open_url 'https://rb.corp.linkedin.com/users/cokim/'
  open_url 'https://rb.corp.linkedin.com/users/dcombs/'
  open_url 'https://rb.corp.linkedin.com/users/mistewar/'
  open_url 'https://rb.corp.linkedin.com/users/syeung/'
}

coding_music() {
  # some post-rock albums I like to put on to get in the zone
  open_url 'https://www.youtube.com/watch?v=Ziw4yd5R0QI' # Explosions in the Sky - The Earth Is Not a Cold Dead Place
  open_url 'https://www.youtube.com/watch?v=4RkZttZHFZU' # Mono - You Are There
  open_url 'https://www.youtube.com/watch?v=AFzAd4PNCaY' # Russian Circles - Station
}

# collect the menu items into an indexed array for selection (with sorted keys)
readarray -t menu_items_by_index <<< "$(for key in "${!menu_items[@]}"; do echo "$key"; done | sort )"
num_items="${#menu_items_by_index[@]}"

echo ""
echo "What do you want to open?"

for(( i = 0; i < $num_items; i++ ))
do
  # dislplay a 1-based index, which is nicer to select
  echo -e "[$(( i + 1 ))] ${menu_items_by_index[$i]}"
done

echo ""
echo -n "Selection: "

read item_num
if [ -n "$item_num" ] && (( "$item_num" <= "$num_items" ))
then
  (( item_index = item_num - 1 ))
  item_name="${menu_items_by_index[$item_index]}"
  echo_info "opening $item_name..."
  func_name="${menu_items[$item_name]}"
  # run the associated function
  "$func_name"
else
  echo_info "(no option selected)"
fi

