#!/usr/bin/env bash

# count lines of code for the input files
# (non-comment count currently only works for bash)

# courtesy of https://stackoverflow.com/a/3352015
trim() {
  local var="$*"
  # remove leading whitespace characters
  var="${var#"${var%%[![:space:]]*}"}"
  # remove trailing whitespace characters
  var="${var%"${var##*[![:space:]]}"}"
  echo -n "$var"
}

# TODO: not sure if these sed commands work on Linux
# filter out *.swp files
valid_files=( $(echo "$@" | sed -E 's/[^[:space:]]+.swp\ //g') )

all_files="$(cat ${valid_files[*]})"
all_files_no_blank="$(echo "$all_files" | sed '/^[[:space:]]*$/d')"
# TODO: detect the comment char from the text
# - '//' for JS, CSS, C, Rust, Java, etc.
# - '#' for bash, etc.
# - '/*','*','*/' for C, Java, etc.
# - '<!--','-->' for HTML
all_files_no_comments="$(echo "$all_files_no_blank" | sed '/^[[:space:]]*#/d')"

num_lines="$(echo "$all_files" | wc -l )"
num_lines_no_blank="$(echo "$all_files_no_blank" | wc -l )"
num_lines_no_comments="$(echo "$all_files_no_comments" | wc -l )"

echo "Files          : ${#valid_files[@]}"
echo "Total lines    : $(trim $num_lines)"
echo "No empty lines : $(trim $num_lines_no_blank)"
echo "No comments    : $(trim $num_lines_no_comments)"

