#!/usr/bin/env badash
# shellcheck shell=bash

# Count lines of code for the input files

show_help_msg() {
  echo "lines-of-code - Count lines of code for the input files"
  echo 'Usage: lines-of-code [options]'
  echo ''
  echo 'Options:'
  echo '  -h               Show this help message'
}

while getopts ":h" opt
do
  case $opt in
    h)
      show_help_msg && exit 0
      ;;
    \?)
      @echo-err "$0: invalid option '-$OPTARG'"
      exit 1
      ;;
    :)
      @echo-err "$0: option '-$OPTARG' requires an argument"
      exit 1
      ;;
  esac
done
shift $((OPTIND-1))

@uses-cmds sed grep

# TODO: specify to generated getopts stuff that something should be passed in
if [ "$#" -eq 0 ]
then
  @echo-err "No input files given!"
  exit 1
fi

# filter out *.swp files
mapfile -t valid_files <<< "$(echo "$@" | sed -E 's/[^[:space:]]+.swp//g')"

# shellcheck disable=SC2048,SC2086
all_files="$(cat ${valid_files[*]})"
all_files_no_blank="$(echo "$all_files" | sed '/^[[:space:]]*$/ d')"
# strips comment lines starting with '#' and '//'
all_files_no_comments="$(echo "$all_files_no_blank" | sed '/^[[:space:]]*#/ d' | sed '/^[[:space:]]*\/\// d')"

# count lines for each (from https://stackoverflow.com/a/42399738)
num_lines="$(echo -n "$all_files" | grep -c '^' )"
num_lines_no_blank="$(echo -n "$all_files_no_blank" | grep -c '^' )"
num_lines_no_comments="$(echo -n "$all_files_no_comments" | grep -c '^' )"

echo "Files          : ${#valid_files[@]}"
echo "Total lines    : $num_lines"
echo "No empty lines : $num_lines_no_blank"
echo "No comments    : $num_lines_no_comments"
