#!/usr/bin/env bash
###########################################################################
# DO NOT EDIT! This script was auto-generated. To update this script, edit
# the file script-gen/libranch, and run './generate-scripts.sh'
###########################################################################

COLOR_FG_BOLD_BLUE='\033[1;34m'
COLOR_FG_GREEN='\033[0;32m'
COLOR_FG_RED='\033[0;31m'
COLOR_RESET='\033[0m'
echo_err() {
  echo -e "${COLOR_FG_RED}$@${COLOR_RESET}" >&2
}
echo_ack() {
  echo -e "${COLOR_FG_GREEN}$@${COLOR_RESET}" >&2
}
echo_info() {
  echo -e "${COLOR_FG_BOLD_BLUE}$@${COLOR_RESET}" >&2
}
do_cmd() {
  echo_ack "($@)"
  ( set -x; "$@" )
}
do_git() {
  do_cmd git "$@"
}
current_git_branch() {
  echo "$(git rev-parse --abbrev-ref HEAD)"
}
in_git_repo() {
  git status >/dev/null && return 0 || return 1
}
on_git_branch() {
  [ "$(current_git_branch)" != "$1" ] && echo_err ">_<  Must be on branch '$1' for this" && return -1 || return 0
}
show_usage() {
  echo_err "Usage:"
  echo_err "  ${0##*/} <new-branch-name>"
}
new_branch_name="$1"
if [ -z "$new_branch_name" ]
then
  echo_err "ERROR: Missing branch name"
  show_usage
  exit 1
fi
if in_git_repo && on_git_branch 'master'
then
  do_git checkout -b "$new_branch_name" origin/master
fi
