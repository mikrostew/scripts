#!/usr/bin/env badash
# [git] Merge main/master into current branch (Git Merge Main into Branch)

COLOR_FG_GREEN='\033[0;32m'
COLOR_FG_RED='\033[0;31m'
COLOR_RESET='\033[0m'

current_git_branch ()
{
  echo "$(git rev-parse --abbrev-ref HEAD)"
}
do_cmd ()
{
  local cmd_args="";
  for arg in "$@";
  do
    case "$arg" in
      *\ *)
        cmd_args="$cmd_args \"$arg\""
        ;;
      *)
        cmd_args="$cmd_args $arg"
        ;;
    esac;
  done;
  echo -e "${COLOR_FG_GREEN}($cmd_args )${COLOR_RESET}" 1>&2;
  command "$@"
}
do_git ()
{
  do_cmd git "$@"
}
echo_err ()
{
  echo -e "${COLOR_FG_RED}$@${COLOR_RESET}" 1>&2
}
gmt ()
{
  do_git mergetool --tool=opendiff
}
in_git_repo ()
{
  git status > /dev/null && return 0 || echo_err "Not in git repo" && return 1
}
no_uncommitted_changes ()
{
  [ "$(git status --porcelain --untracked-files=no)" != "" ] && echo_err ">_<  You have uncommitted changes" && return -1 || return 0
}
not_on_git_branch ()
{
  [ "$(current_git_branch)" == "$1" ] && echo_err ">_<  Doesn't work on branch '$1'" && return -1 || return 0
}

if in_git_repo && not_on_git_branch 'master' && no_uncommitted_changes
then
  branch_name=$(current_git_branch)

  # is the default branch main or master?
  # see https://stackoverflow.com/q/5167957
  if git show-ref --verify --quiet refs/heads/main
  then
    default_branch="main"
  elif git show-ref --verify --quiet refs/heads/master
  then
    default_branch="master"
  else
    echo "Error: default branch is not 'main' or 'master'"
    exit 1
  fi

  # merge straight from origin, without updating local main/master
  @wait-for-command git merge "origin/$default_branch"

  # error recovery to fix merge conflicts
  if [ "$?" -ne 0 ]
  then
    echo_err "Dang it! merge failed - good luck"
    @wait-for-keypress "Press any key to start merge resolution... "
    gmt
  fi
fi
