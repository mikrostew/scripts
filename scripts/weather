#!/usr/bin/env badash
# Get current weather by zip code
# uses OpenWeatherMap API - http://openweathermap.org/api

COLOR_FG_BOLD_BLUE='\033[1;34m'
COLOR_FG_RED='\033[0;31m'
COLOR_RESET='\033[0m'

echo_err ()
{
    echo -e "${COLOR_FG_RED}$@${COLOR_RESET}" 1>&2
}
show_help_msg() {
  echo "weather - Get current weather by zip code"
  echo 'Usage: weather [options]'
  echo ''
  echo 'Options:'
  echo '  -h               Show this help message'
}

while getopts ":h" opt
do
  case $opt in
    h)
      show_help_msg && exit 0
      ;;
    \?)
      echo_err "$0: invalid option '-$OPTARG'"
      exit 1
      ;;
    :)
      echo_err "$0: option '-$OPTARG' requires an argument"
      exit 1
      ;;
  esac
done
shift $((OPTIND-1))

@uses_cmds curl jq bc xargs

# get API key from the keychain (will probably have to input my password)
api_key="$(security find-generic-password -ga open-weather-map -w)"
if [ -e "$api_key" ]
then
  echo_err "Unable to get the API key"
  exit 1
fi

# Sunnyvale, Mountain View, SF
zip_codes=( 94087 94043 94105 )

for zip in ${zip_codes[*]}; do
  page=$(curl "http://api.openweathermap.org/data/2.5/weather?zip=${zip},us&appid=${api_key}" 2>/dev/null)
  name="$(echo $page | jq --raw-output -M '.name')"
  temp_kelvin="$(echo $page | jq --raw-output -M '.main.temp')"
  temp_celcius=$(echo "$temp_kelvin - 273.15" | bc -q | xargs printf "%.1f") # convert to C and format
  temp_f=$(echo "(1.8 * ($temp_kelvin - 273.15)) + 32" | bc -q | xargs printf "%.1f") # convert to F and format
  humidity="$(echo $page | jq --raw-output -M '.main.humidity')"
  main="$(echo $page | jq --raw-output -M '.weather | .[0] | .main')"
  description="$(echo $page | jq --raw-output -M '.weather | .[0] | .description')"

  echo -e "${COLOR_FG_BOLD_BLUE}$name${COLOR_RESET} ($zip)"
  echo -e "Weather:     ${COLOR_FG_BOLD_BLUE}$main - $description${COLOR_RESET}"
  echo -e "Temperature: ${COLOR_FG_BOLD_BLUE}$temp_f${COLOR_RESET}°F (${temp_celcius}°C)"
  echo -e "Humidity:    ${COLOR_FG_BOLD_BLUE}$humidity${COLOR_RESET}%"
  echo ""
done
