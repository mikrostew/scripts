#!/usr/bin/env bash
# Automatically do things that I do every morning manually

# TODO: make the output of this nicer, eventually...

COLOR_FG_BOLD_BLUE='\033[1;34m'
COLOR_FG_GREEN='\033[0;32m'
COLOR_FG_RED='\033[0;31m'
COLOR_RESET='\033[0m'

current_git_branch ()
{
    echo "$(git rev-parse --abbrev-ref HEAD)"
}
do_cmd ()
{
    local cmd_args="";
    for arg in "$@";
    do
        case "$arg" in
            *\ *)
                cmd_args="$cmd_args \"$arg\""
            ;;
            *)
                cmd_args="$cmd_args $arg"
            ;;
        esac;
    done;
    echo -e "${COLOR_FG_GREEN}($cmd_args )${COLOR_RESET}" 1>&2;
    command "$@"
}
do_git ()
{
    do_cmd git "$@"
}
echo_ack ()
{
    echo -e "${COLOR_FG_GREEN}$@${COLOR_RESET}" 1>&2
}
echo_err ()
{
    echo -e "${COLOR_FG_RED}$@${COLOR_RESET}" 1>&2
}


# open activity monitor (after making sure it's not running)
kill-proc-name "Activity Monitor"
run-app-path "/System/Applications/Utilities/Activity Monitor.app/Contents/MacOS/Activity Monitor"

# kill any programs that I don't want to be running
kill-proc-name "zoom.us"
kill-proc-name "App Store"
kill-proc-name "Discord"

# kill and restart some things
kill-proc-name "Outlook"
# if successful, sometimes that will bring up a dialog about force quitting, whatever, don't care, kill that too
sleep 0.5
kill-proc-name "Microsoft Error Reporting"
run-app-path "/Applications/Microsoft Outlook.app/Contents/MacOS/Microsoft Outlook"

kill-proc-name "Slack"
run-app-path "/Applications/Slack.app/Contents/MacOS/Slack"

# update homebrew
echo "homebrew"
do_cmd brew update

# upgrade things installed via homebrew
do_cmd brew upgrade git
do_cmd brew upgrade git-gui
do_cmd brew upgrade vim
do_cmd brew upgrade macvim

# check that I am connected to VPN, and pause & wait for keypress
if ping -c1 tools.corp.linkedin.com >/dev/null 2>&1
then
  echo_ack "Looks like you're connected to VPN"
else
  echo_err "Not connected to VPN"
  echo "Please connect to VPN, then press any key to continue..."
  read -n1 -s
fi

# update engtools
do_cmd brew engtools install

# update repos

# Voyager Web
echo "Voyager Web"
cd "/Users/$USER/src/li/voyager-web_trunk/"
# if not on the master branch, checkout master, pull, and rebase
branch_name="$(current_git_branch)"
# TODO: check for "main" as well?
if [ "$branch_name" != "master" ]; then
  do_git checkout master
  # pull and rebase from master
  gpr
  # go back to the original branch
  do_git checkout "$branch_name"
else
  # pull and rebase from master
  gpr
fi

# TODO: do that for any more repos?

echo_ack ""
echo_ack "Good Morning!"
