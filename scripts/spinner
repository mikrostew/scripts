#!/usr/bin/env bash
###########################################################################
# DO NOT EDIT! This script was auto-generated. To update this script, edit
# the file script-gen/spinner, and run './generate-scripts.sh'
###########################################################################
#5dd3214d9d0f9e4535f9a79035e0cabc

COLOR_FG_RED='\033[0;31m'
COLOR_RESET='\033[0m'
echo_err ()
{
    echo -e "${COLOR_FG_RED}$@${COLOR_RESET}" 1>&2
}
show_help_msg() {
  echo "spinner - Show a busy spinner while the input PID is running"
  echo 'Usage: spinner [options] cmd_pid'
  echo ''
  echo 'Options:'
  echo '  -h               Show this help message'
  echo '  -m spin_msg      Text to display along with the spinner animation'
  echo ''
  echo 'Arguments:'
  echo '  cmd_pid          PID of the long-running command'
}
while getopts ":m:h" opt
do
  case $opt in
    m)
      spin_msg="$OPTARG"
      ;;
    h)
      show_help_msg && exit 0
      ;;
    \?)
      echo_err "$0: invalid option '-$OPTARG'"
      exit 1
      ;;
    :)
      echo_err "$0: option '-$OPTARG' requires an argument"
      exit 1
      ;;
  esac
done
shift $((OPTIND-1))
cmd_pid="${1:?Missing argument 'cmd_pid'}"
spin_chars='⠋⠙⠹⠸⠼⠴⠦⠧⠇⠏' # braille dots
num_chars=${#spin_chars}
total_length=$(( 2 + ${#spin_msg} ))
i=0
while kill -0 $cmd_pid 2>/dev/null
do
  i=$(( (i + 1) % num_chars ))
  printf "\r${spin_chars:$i:1} ${spin_msg}" >&2
  sleep 0.1
done
printf "\r%-${total_length}s\r" ' ' >&2
