#!/usr/bin/env badash
# shellcheck shell=bash

# [git] Undo the last commit (Git Undo)

COLOR_FG_GREEN='\033[0;32m'
COLOR_FG_RED='\033[0;31m'
COLOR_RESET='\033[0m'
do_cmd ()
{
    local cmd_args="";
    for arg in "$@";
    do
        case "$arg" in
            *\ *)
                cmd_args="$cmd_args \"$arg\""
            ;;
            *)
                cmd_args="$cmd_args $arg"
            ;;
        esac;
    done;
    echo -e "${COLOR_FG_GREEN}($cmd_args )${COLOR_RESET}" 1>&2;
    command "$@"
}
do_git ()
{
    do_cmd git "$@"
}
echo_err ()
{
    echo -e "${COLOR_FG_RED}$*${COLOR_RESET}" 1>&2
}
in_git_repo ()
{
    git status > /dev/null && return 0 || echo_err "Not in git repo" && return 1
}
show_help_msg() {
  echo "gundo - [git] Undo the last commit (Git UNDO)"
  echo 'Usage: gundo [options]'
  echo ''
  echo 'Options:'
  echo '  -h               Show this help message'
}
while getopts ":h" opt
do
  case $opt in
    h)
      show_help_msg && exit 0
      ;;
    \?)
      echo_err "$0: invalid option '-$OPTARG'"
      exit 1
      ;;
    :)
      echo_err "$0: option '-$OPTARG' requires an argument"
      exit 1
      ;;
  esac
done
shift $((OPTIND-1))

@uses-cmds git

if in_git_repo
then
  last_commit="$(git log -1 --pretty=%B)"
  git_dir="$(git rev-parse --show-toplevel)/.git"
  do_git reset --soft HEAD~1

  # also writes the previous commit message to .git/GITGUI_MSG
  echo "$last_commit" > "$git_dir/GITGUI_MSG"
fi
