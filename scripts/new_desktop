#!/usr/bin/env badash
###########################################################################
# DO NOT EDIT! This script was auto-generated. To update this script, edit
# the file ~/dotfiles/script-gen/new_desktop, and run 'generate-scripts.sh'
###########################################################################
#8d824e6fafd47ad9c26845a76f786d05

COLOR_FG_RED='\033[0;31m'
COLOR_RESET='\033[0m'
echo_err ()
{
    echo -e "${COLOR_FG_RED}$@${COLOR_RESET}" 1>&2
}
requirement_check ()
{
    local cmd="$1";
    local how_to_install="$2";
    if [ ! $(command -v $cmd) ]; then
        echo_err "[ERROR] Command '$cmd' is required for this script, but not installed";
        echo_err "To install: $how_to_install";
        return 1;
    else
        return 0;
    fi
}
show_help_msg() {
  echo "new_desktop - Opens new: iTerm2 window, Chrome window, and Sticky note"
  echo 'Usage: new_desktop [options]'
  echo ''
  echo 'Options:'
  echo '  -h               Show this help message'
}
while getopts ":h" opt
do
  case $opt in
    h)
      show_help_msg && exit 0
      ;;
    \?)
      echo_err "$0: invalid option '-$OPTARG'"
      exit 1
      ;;
    :)
      echo_err "$0: option '-$OPTARG' requires an argument"
      exit 1
      ;;
  esac
done
shift $((OPTIND-1))
combined_return=0
requirement_check osascript "search 'how to install osascript'"
combined_return=$(( combined_return + $? ))
if [ "$combined_return" != 0 ]; then exit $combined_return; fi
osascript -e 'tell application "iTerm2" to create window with default profile'
osascript -e 'tell application "Google Chrome" to make new window activate'
osascript -e 'tell application "System Events" to keystroke "New Task"'
osascript -e 'tell application "System Events" to keystroke "a" using {command down}'
osascript -e 'tell application "System Events" to keystroke "y" using {shift down, command down}'
