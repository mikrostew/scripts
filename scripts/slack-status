#!/usr/bin/env badash
# Set my status in Slack

# (key code reference: https://eastmanreference.com/complete-list-of-applescript-key-codes)

# first argument is the emoji
emoji_name="${1:?Missing first argument - emoji name}"

# second argument is the status text
status_text="${2:?Missing second argument - status text}"


###### make sure Slack is running ######

osascript -e 'tell application "Slack" to activate'

# if slack was killed, it will take a few seconds to actually be running
echo "Waiting for slack to be running..."
sleep 5

###### make sure Slack is opened ######

# this doesn't work
#osascript -e 'tell application "Slack" to set frontmost to true'

# this doesn't work either
# trying this from https://stackoverflow.com/a/13177603
#osascript <<EOF
#set theTitle to "some title"
#tell application "System Events"
#    tell process "appIT"
#        set frontmost to true
#        perform action "AXRaise" of (windows whose title is theTitle)
#    end tell
#end tell
#EOF

# adapted this from https://stackoverflow.com/a/24636884 and https://stackoverflow.com/a/5693137
osascript <<EOF
tell application "Slack"
  set theWindow to the first item of windows
  tell theWindow
    set visible to false
    set visible to true
  end tell
end tell
EOF

sleep 1

###### actually set the status ######

# open the status dialog
# shift-tab to select the emoji
# enter to open that menu
# type the input emoji name
# (this doesn't work, but clipboard does)
#osascript -e "tell application 'System Events' to keystroke '$emoji_name'"
# then enter to select it
osascript <<EOF
set the clipboard to "$emoji_name"
tell application "System Events"
  keystroke "Y" using command down
  delay 0.5
  key code 48 using shift down
  delay 0.5
  key code 76
  delay 0.5
  keystroke "v" using command down
  delay 0.5
  key code 76
end tell
EOF

sleep 1

# tab to get back to the status text entry
# select anything that is already there, and delete it
osascript <<EOF
tell application "System Events"
  key code 48
  delay 0.5
  keystroke "a" using command down
  delay 0.5
  key code 51
end tell
EOF

sleep 1

# type the input status text, then enter to save everything
# (this doesn't work, but clipboard does)
#osascript -e "tell application 'System Events' to keystroke '$status_text'"
osascript <<EOF
set the clipboard to "$status_text"
tell application "System Events"
  keystroke "v" using command down
  delay 0.5
  key code 76
end tell
EOF
