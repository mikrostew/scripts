#!/usr/bin/env badash
###########################################################################
# DO NOT EDIT! This script was auto-generated. To update this script, edit
# the file ~/dotfiles/script-gen/stock, and run 'generate-scripts.sh'
###########################################################################
#a59beb2f525cabf28ca0caebd172b2ed

COLOR_FG_RED='\033[0;31m'
COLOR_RESET='\033[0m'
echo_err ()
{
    echo -e "${COLOR_FG_RED}$@${COLOR_RESET}" 1>&2
}
requirement_check ()
{
    local cmd="$1";
    local how_to_install="$2";
    if [ ! $(command -v $cmd) ]; then
        echo_err "[ERROR] Command '$cmd' is required for this script, but not installed";
        echo_err "To install: $how_to_install";
        return 1;
    else
        return 0;
    fi
}
show_help_msg() {
  echo "stock - Open the browser with info on the input stock"
  echo 'Usage: stock [options] stock_symbol'
  echo ''
  echo 'Options:'
  echo '  -h               Show this help message'
  echo ''
  echo 'Arguments:'
  echo '  stock_symbol     The symbol to use to look up the stock'
}
while getopts ":h" opt
do
  case $opt in
    h)
      show_help_msg && exit 0
      ;;
    \?)
      echo_err "$0: invalid option '-$OPTARG'"
      exit 1
      ;;
    :)
      echo_err "$0: option '-$OPTARG' requires an argument"
      exit 1
      ;;
  esac
done
shift $((OPTIND-1))
combined_return=0
if [ "$(uname -s)" == "Linux" ]; then
  requirement_check xdg-open "search 'how to install xdg-open/Linux'"
  combined_return=$(( combined_return + $? ))
fi
if [ "$(uname -s)" == "Darwin" ]; then
  requirement_check open "search 'how to install open/OSX'"
  combined_return=$(( combined_return + $? ))
fi
if [ "$combined_return" != 0 ]; then exit $combined_return; fi
stock_symbol="${1:?Missing argument \'stock_symbol\'}"
stock_url="https://finance.yahoo.com/quote/$stock_symbol/"
if [ "$(uname -s)" == "Linux" ]
then
  xdg-open "$stock_url"
elif [ "$(uname -s)" == "Darwin" ]
then
  open "$stock_url"
fi
