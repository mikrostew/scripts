#!/usr/bin/env bash
###########################################################################
# DO NOT EDIT! This script was auto-generated. To update this script, edit
# the file script-gen/stock, and run './generate-scripts.sh'
###########################################################################
#ad48df3ebcdc17a6b012a330fdc144fe

COLOR_FG_RED='\033[0;31m'
COLOR_RESET='\033[0m'
echo_err ()
{
    echo -e "${COLOR_FG_RED}$@${COLOR_RESET}" 1>&2
}
requirement_check ()
{
    local cmd="$1";
    local how_to_install="$2";
    if [ ! $(command -v $cmd) ]; then
        echo_err "[ERROR] Command '$cmd' is required for this script, but not installed";
        echo_err "To install: $how_to_install";
        return 1;
    else
        return 0;
    fi
}
combined_return=0
if [ "$(uname -s)" == "Linux" ]; then
  requirement_check xdg-open "search 'how to install xdg-open/Linux'"
  combined_return=$(( combined_return + $? ))
fi
if [ "$(uname -s)" == "Darwin" ]; then
  requirement_check open "search 'how to install open/OSX'"
  combined_return=$(( combined_return + $? ))
fi
if [ "$combined_return" != 0 ]; then exit $combined_return; fi
err_no_symbol="$(echo -e "${COLOR_FG_RED}Error: No stock symbol provided${COLOR_RESET}")"
stock_symbol="${1:?$err_no_symbol}"
stock_url="https://finance.yahoo.com/quote/$stock_symbol/"
if [ "$(uname -s)" == "Linux" ]
then
  xdg-open "$stock_url"
fi
if [ "$(uname -s)" == "Darwin" ]
then
  open "$stock_url"
fi
