#!/usr/bin/env badash
###########################################################################
# DO NOT EDIT! This script was auto-generated. To update this script, edit
# the file ~/dotfiles/script-gen/nextoncall, and run 'generate-scripts.sh'
###########################################################################
#2e2606ec5ce8c3ab592f61b656052a0b

COLOR_FG_BOLD_BLUE='\033[1;34m'
COLOR_FG_RED='\033[0;31m'
COLOR_RESET='\033[0m'
echo_err ()
{
    echo -e "${COLOR_FG_RED}$@${COLOR_RESET}" 1>&2
}
show_help_msg() {
  echo "nextoncall - Show my upcoming oncall shifts"
  echo 'Usage: nextoncall [options]'
  echo ''
  echo 'Options:'
  echo '  -h               Show this help message'
}
while getopts ":h" opt
do
  case $opt in
    h)
      show_help_msg && exit 0
      ;;
    \?)
      echo_err "$0: invalid option '-$OPTARG'"
      exit 1
      ;;
    :)
      echo_err "$0: option '-$OPTARG' requires an argument"
      exit 1
      ;;
  esac
done
shift $((OPTIND-1))
@uses-cmds curl jq e2d
data="$(curl -sS https://oncall.prod.linkedin.com/api/v0/users/$(whoami)/upcoming)"
@exit-on-error "Error running curl"
json_data="$(echo "$data" | jq -r '.[]|"\(.team) \(.role) \(.start)"')"
@exit-on-error "Error running jq"
while read team role ts
do
  formatted_time="$(echo $ts | e2d)"
  echo -e "$role oncall for $team at ${COLOR_FG_BOLD_BLUE}$formatted_time${COLOR_RESET}"
done <<< "$json_data"
