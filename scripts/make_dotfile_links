#!/usr/bin/env badash
###########################################################################
# DO NOT EDIT! This script was auto-generated. To update this script, edit
# the file ~/dotfiles/script-gen/make_dotfile_links, and run 'generate-scripts.sh'
###########################################################################
#30aaa49b9f2a8f618dcacf3bdcdb31dc

COLOR_FG_BOLD_BLUE='\033[1;34m'
COLOR_FG_GREEN='\033[0;32m'
COLOR_FG_RED='\033[0;31m'
COLOR_FG_YELLOW='\033[0;33m'
COLOR_RESET='\033[0m'
echo_err ()
{
    echo -e "${COLOR_FG_RED}$@${COLOR_RESET}" 1>&2
}
show_help_msg() {
  echo "make_dotfile_links - Create links for dotfiles"
  echo 'Usage: make_dotfile_links [options] [checkout_dir]'
  echo ''
  echo 'Options:'
  echo '  -h               Show this help message'
  echo ''
  echo 'Arguments:'
  echo '  checkout_dir     (optional) The directory where the repo is checked out (defaults to "$HOME/dotfiles")'
}
while getopts ":h" opt
do
  case $opt in
    h)
      show_help_msg && exit 0
      ;;
    \?)
      echo_err "$0: invalid option '-$OPTARG'"
      exit 1
      ;;
    :)
      echo_err "$0: option '-$OPTARG' requires an argument"
      exit 1
      ;;
  esac
done
shift $((OPTIND-1))
checkout_dir="${1:-$HOME/dotfiles}"
@uses_cmds readlink
declare -A links
links[".vimrc"]=".vimrc"
links[".vim"]=".vim"
links[".bash_profile"]=".bash_profile"
links[".bashrc"]=".bashrc"
links[".inputrc"]=".inputrc"
links[".gitignore"]=".gitignore"
links[".tmux.conf"]=".tmux.conf"
links[".bundle"]=".bundle"
links[".rubocop.yml"]=".rubocop.yml"
if system_is_darwin?
then
  links[".ssh/config"]=".ssh-config-mac"
elif system_is_linux?
then
  links[".ssh/config"]=".ssh-config-linux"
fi
for i in "${!links[@]}"
do
  echo -n "$HOME/$i => $checkout_dir/${links[$i]}"
  if [ -L "$HOME/$i" ]
  then
    echo -e " ${COLOR_FG_YELLOW}(symlink already exists, skipping)${COLOR_RESET}"
    continue
  fi
  if [ -e "$HOME/$i" ]
  then
    echo -ne " ${COLOR_FG_BOLD_BLUE}(file exists, renamed to '$HOME/$i-old')${COLOR_RESET}"
    mv "$HOME/$i" "$HOME/$i-old"
  fi
  ln -s "$checkout_dir/${links[$i]}" "$HOME/$i"
  echo -e " [${COLOR_FG_GREEN}OK${COLOR_RESET}]"
done
