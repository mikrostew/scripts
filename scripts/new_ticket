#!/usr/bin/env bash
###########################################################################
# DO NOT EDIT! This script was auto-generated. To update this script, edit
# the file script-gen/new_ticket, and run './generate-scripts.sh'
###########################################################################

COLOR_RESET='\033[0m'
COLOR_FG_BOLD_BLUE='\033[1;34m'
echo_info ()
{
    echo -e "${COLOR_FG_BOLD_BLUE}$@${COLOR_RESET}" 1>&2
}
join() {
  local IFS="/"
  echo "$*"
}
TICKET_TASK="task"
TICKET_BUG="bug"
TICKET_RESEARCH="research"
ticket_types=( $TICKET_TASK $TICKET_BUG $TICKET_RESEARCH )
default_type="$TICKET_TASK"
echo -n "Ticket type - $(join ${ticket_types[@]}) [$default_type]: "
read input_type
if [ -z "$input_type" ]
then
  ticket_type="$default_type"
else
  ticket_type="$input_type"
fi
osascript -e 'tell application "Google Chrome" to activate'
if [ "$ticket_type" == "$TICKET_TASK" ]
then
  echo_info "Filling out ticket type '$TICKET_TASK'"
  osascript <<EOFTask
tell application "System Events"
  keystroke "h2. Summary" & return & return
  keystroke "h2. Objective" & return & return
  keystroke "h2. Acceptance Criteria" & return & return
  keystroke "h2. Pre-Requisites" & return & return
end tell
EOFTask
elif [ "$ticket_type" == "$TICKET_BUG" ]
then
  echo_info "Filling out ticket type '$TICKET_BUG'"
  osascript <<EOFBug
tell application "System Events"
  keystroke "h2. Summary" & return & return
  keystroke "h2. Steps to Reproduce" & return & return
  keystroke "h2. Bug Fix Acceptance Criteria" & return & return
  keystroke "h2. Additional Details" & return & return
end tell
EOFBug
elif [ "$ticket_type" == "$TICKET_RESEARCH" ]
then
  echo_info "Filling out ticket type '$TICKET_RESEARCH'"
  osascript <<EOFResearch
tell application "System Events"
  keystroke "h2. Summary" & return & return
  keystroke "h2. Objective" & return & return
  keystroke "h2. Components" & return & return
  keystroke "h2. Contacts" & return & return
end tell
EOFResearch
fi
