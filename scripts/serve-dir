#!/usr/bin/env bash
###########################################################################
# DO NOT EDIT! This script was auto-generated. To update this script, edit
# the file script-gen/serve-dir, and run './generate-scripts.sh'
###########################################################################
#8a9a5b8636d72aad697e81948156ba63

COLOR_FG_BOLD_BLUE='\033[1;34m'
COLOR_FG_RED='\033[0;31m'
COLOR_RESET='\033[0m'
echo_err ()
{
    echo -e "${COLOR_FG_RED}$@${COLOR_RESET}" 1>&2
}
requirement_check ()
{
    local cmd="$1";
    local how_to_install="$2";
    if [ ! $(command -v $cmd) ]; then
        echo_err "[ERROR] Command '$cmd' is required for this script, but not installed";
        echo_err "To install: $how_to_install";
        return 1;
    else
        return 0;
    fi
}
show_help_msg() {
  echo "serve-dir - Serve the files in the current directory"
  echo 'Usage: serve-dir [options] [port]'
  echo ''
  echo 'Options:'
  echo '  -h               Show this help message'
  echo ''
  echo 'Arguments:'
  echo '  port             (optional) The port to serve from'
}
while getopts ":h" opt
do
  case $opt in
    h)
      show_help_msg && exit 0
      ;;
    \?)
      echo_err "$0: invalid option '-$OPTARG'"
      exit 1
      ;;
    :)
      echo_err "$0: option '-$OPTARG' requires an argument"
      exit 1
      ;;
  esac
done
shift $((OPTIND-1))
combined_return=0
requirement_check ifconfig "search 'how to install ifconfig'"
combined_return=$(( combined_return + $? ))
requirement_check ruby "search 'how to install ruby'"
combined_return=$(( combined_return + $? ))
requirement_check awk "search 'how to install awk'"
combined_return=$(( combined_return + $? ))
if [ "$combined_return" != 0 ]; then exit $combined_return; fi
port="${1}"
port="${port:-8080}"
address="$(ifconfig | awk '/inet / && $2 != "127.0.0.1"{print $2}')"
echo -e "Current directory: ${COLOR_FG_BOLD_BLUE}$PWD${COLOR_RESET}"
echo -e "Serving at ${COLOR_FG_BOLD_BLUE}$address:$port${COLOR_RESET}"
ruby -run -e httpd . -p $port
