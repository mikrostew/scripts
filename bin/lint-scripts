#!/usr/bin/env badash
# shellcheck shell=bash

# lint the input scripts, based on the shebang

# trim whitespace
# (https://stackoverflow.com/a/3352015)
trim() {
  local var="$1"
  # remove leading whitespace characters
  var="${var#"${var%%[![:space:]]*}"}"
  # remove trailing whitespace characters
  var="${var%"${var##*[![:space:]]}"}"
  printf '%s' "$var"
}

num_errors=0

# input files are command line args

# group the files by what should be used to lint them
shellcheck_files=()
eslint_files=()
rubocop_files=()

echo "Linting $# input files"

for file in "$@"; do
  read -r firstline <"$file"
  shebang=$(trim "$firstline")
  filename="${file##*/}"
  extension=$([[ "$filename" = *.* ]] && echo ".${filename##*.}" || echo '.')
  # TODO: --verbose option instead of commented out stuff like this
  #echo "file: $file, name: '$filename', extension: '$extension', shebang: '$shebang'"

  # first try by file extension
  case "$extension" in
    ".sh")
      shellcheck_files+=( "$file" )
      ;;
    ".js"|".ts")
      eslint_files+=( "$file" )
      ;;
    ".rb")
      rubocop_files+=( "$file" )
      ;;
    ".")
      # a lot of these files don't have an extension, check the shebang
      case "$shebang" in
        "#!/usr/bin/env bash"|"#!/usr/bin/env badash")
          shellcheck_files+=( "$file" )
          ;;
        "#!/usr/bin/env node")
          eslint_files+=( "$file" )
          ;;
        "#!/usr/bin/env ruby")
          rubocop_files+=( "$file" )
          ;;
        *)
          @echo-err "Unrecognized shebang '$shebang' in $file"
          (( num_errors+=1 ))
          ;;
      esac
      ;;
    *)
      echo "Unrecognized extension '$extension' for $file"
      (( num_errors+=1 ))
      ;;
  esac
done

# then actually run the linting on those files
if [ "${#shellcheck_files[@]}" -gt 0 ]
then
  echo ""
  echo "${#shellcheck_files[@]} files for shellcheck"
  if ! @wait-for-command shellcheck "${shellcheck_files[@]}"
  then
    (( num_errors+=1 ))
  fi
fi
if [ "${#eslint_files[@]}" -gt 0 ]
then
  echo ""
  echo "${#eslint_files[@]} files for eslint"
  if ! @wait-for-command yarn eslint "${eslint_files[@]}"
  then
    (( num_errors+=1 ))
  fi
fi
if [ "${#rubocop_files[@]}" -gt 0 ]
then
  echo ""
  echo "${#rubocop_files[@]} files for rubocop"
  if ! @wait-for-command rubocop "${rubocop_files[@]}"
  then
    (( num_errors+=1 ))
  fi
fi

if [ "$num_errors" -ne 0 ]
then
  echo ""
  echo "Found errors with $num_errors linter(s)"
  exit 1
fi
